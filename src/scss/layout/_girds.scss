/*
*   MOBILE ( < 768px) --------------------------------
* fixture ------------------------------- sm
* #of columns --------------------------- 4
* unit ---------------------------------- ( 100% - (5px *2) ) / 4
* gutter -------------------------------- 20px
* margin -------------------------------- 5px
* container-size ------------------------ 100% - (5px *2)
*
*
*
*   Tablet ( > 768px) -----------------------------
* fixture ------------------------------- md
* #of columns --------------------------- 12
* unit ---------------------------------- ( 100% - (10px *2) ) / 12
* gutter -------------------------------- 20px
* margin -------------------------------- 30px
* container-size ------------------------ 100% - (30px *2)
* container-max-width ------------------- 960px
*
*
*
*   PC ( > 1200px) -------------------------------
* fixture ------------------------------- lg
* #of columns --------------------------- 12
* gutter -------------------------------- 20px
* margin -------------------------------- not need : auto
* container-width ------------------- 1200px
* container-max-width ------------------- 1200px;
*/

$gutter: 20px;

$sm-columns: 4;
$sm-margin: 15px;

$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-columns: 12;
$lg-max-container: 1200px;

.container {
	width: 100%;
	padding: 0 $sm-margin;
	margin: 0 auto;

	.row{
			display: flex;
			flex-wrap: wrap;
	}

	[class^="col-"] {
			padding: 0 $gutter / 2;
	}

	@for $i from 1 through $sm-columns {
			.col-sm-#{$i} {
					width: percentage($i / $sm-columns);
			}
	}

	@include responsive(T) {
			max-width: $md-max-container;
			padding: 0 $md-margin;

			@for $i from 1 through $md-columns {
					.col-md-#{$i} {
							width: percentage($i / $md-columns);
					}
			}
	}
	
	@include responsive(D) {
		max-width: $lg-max-container;
		padding: 0;

			@for $i from 1 through $lg-columns {
					.col-lg-#{$i} {
							width: percentage($i / $lg-columns);
					}
			}
	}
}

.main-container {
	[class^="col-"] {
		padding: 0;
	}
}